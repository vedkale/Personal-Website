{"version":3,"sources":["logo.svg","components/assets/Resume.pdf","images/WarmPoly.png","utils/scroll.js","components/Navigation.js","components/Footer.js","components/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","isSmoothScrollSupported","document","documentElement","style","toElement","element","scrollIntoView","behavior","block","Navigation","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleScroll","bind","assertThisInitialized","state","isSticky","tranparency","inherits","createClass","key","value","window","addEventListener","removeEventListener","setState","querySelector","getBoundingClientRect","bottom","pageYOffset","offsetTop","pageSelector","nextPage","scrollToElement","stickyClass","react_default","a","createElement","id","className","background","transition","pointerEvents","href","resume","target","rel","Component","FooterStyle","padding","backgroundColor","color","linkStyle","Footer","apply","arguments","react_fontawesome_index_es","icon","size","paddingTop","landingPage","backgroundImage","concat","backgroundImg","opacity","backgroundAttachment","backgroundPosition","backgroundRepeat","backgroundSize","minHeight","innerHeight","display","height","justifyContent","alignItems","landingPageText","font","fontSize","lineHeight","LandingPage","flexGrow","library","add","fab","App","components_LandingPage","components_Navigation","src","logo","alt","components_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6871160.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/Resume.06cf07e3.pdf\";","module.exports = __webpack_public_path__ + \"static/media/WarmPoly.e1ce60a0.png\";","const isSmoothScrollSupported = ((document || {}).documentElement || {}).style\r\n  ? 'scrollBehavior' in document.documentElement.style\r\n  : false;\r\n\r\nexport const toTop = () => {\r\n  if (isSmoothScrollSupported) {\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  } else {\r\n    window.scrollTo(0, 0);\r\n  }\r\n};\r\n\r\nexport const to = (ycoordinate) => {\r\n  if (isSmoothScrollSupported) {\r\n    window.scroll({\r\n      top: ycoordinate,\r\n      left: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  } else {\r\n    window.scrollTo(0, ycoordinate);\r\n  }\r\n};\r\n\r\nexport const toElement = (element) => {\r\n  if (element) {\r\n    if (isSmoothScrollSupported) {\r\n      element.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'start'\r\n      });\r\n    } else {\r\n      element.scrollIntoView();\r\n    }\r\n  }\r\n};\r\n\r\nexport default {\r\n  toTop,\r\n  to,\r\n  toElement\r\n};","import React, { Component } from \"react\";\r\nimport resume from \"./assets/Resume.pdf\";\r\nimport { toElement as scrollToElement } from \"../utils/scroll\";\r\n\r\nexport class Navigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n    this.state = {\r\n      isSticky: false,\r\n      tranparency: 'transparent'\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  handleScroll() {\r\n    this.setState({tranparency:document.querySelector('.landingPage').getBoundingClientRect().bottom > 0 ? 'transparent' : '#212121'});\r\n    //console.log(`window offset ${window.pageYOffset}`);\r\n    //console.log(`nav top ${document.querySelector('#nav').offsetTop}`);\r\n    //console.log(`landing bottom ${document.querySelector('.landingPage').getBoundingClientRect().bottom}`);\r\n\r\n    //if (window.pageYOffset > document.querySelector('#nav').offsetTop && document.querySelector('.landingPage').getBoundingClientRect().bottom < 0) {\r\n        // first part checks if scrolled down to make navbar touch the top(makes it stick) and second part check if bottom of hero page is in view(not stick)\r\n      //if (window.pageYOffset > document.querySelector('#nav').offsetTop) {\r\n      if (window.pageYOffset > document.querySelector('#nav').offsetTop) {    \r\n      this.setState({\r\n        isSticky: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isSticky: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  scrollToPage(pageSelector) {\r\n    const nextPage = document.querySelector(pageSelector);\r\n    scrollToElement(nextPage);\r\n  }\r\n\r\n  render() {\r\n    const stickyClass = this.state.isSticky ? \"navbarSticky\" : \"navbar\";\r\n\r\n    return (\r\n      <nav id='nav' className={stickyClass} style={{background: this.state.tranparency, transition:'all 0.3s ease-in', pointerEvents:'auto'}}>\r\n        <ul>\r\n          <li><a href=\"/\"> Home </a> </li>\r\n          <li><a href=\"/\"> Skills </a></li>\r\n          <li><a href={resume} target=\"_blank\" rel=\"noopener noreferrer\">Resume</a></li>\r\n          <li><a href=\"/\">Contact</a></li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst FooterStyle = {\r\n  padding: \"10px\",\r\n  backgroundColor: \"#212121\",\r\n  color: \"#ccc\"\r\n};\r\n\r\n const linkStyle = {\r\n    padding : '20px 20px'\r\n }\r\n\r\nexport class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer style={FooterStyle}>\r\n        <div>\r\n          <a\r\n            href=\"https://github.com/vedkale/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={linkStyle}\r\n          >\r\n            <FontAwesomeIcon icon={[\"fab\", \"github\"]} size=\"3x\" />{\" \"}\r\n          </a>\r\n          <a\r\n            href=\"https://www.linkedin.com/in/vedkale/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={linkStyle}\r\n          >\r\n            <FontAwesomeIcon icon={[\"fab\", \"linkedin\"]} size=\"3x\" />{\" \"}\r\n          </a>\r\n          <a\r\n            href=\"https://www.kaggle.com/vedkale/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={linkStyle}\r\n          >\r\n            <FontAwesomeIcon icon={[\"fab\", \"kaggle\"]} size=\"3x\" />{\" \"}\r\n          </a>\r\n        </div>\r\n        <div>\r\n          <p style={{paddingTop:'20px'}}> Ved Kale &copy; 2019 </p>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n// import { isScrolledIntoView, resizeToCover, scrolledOverPercent } from \"../utils/landingPageScript\";\r\nimport backgroundImg from \"../images/WarmPoly.png\";\r\n\r\nconst landingPage = {\r\n  backgroundImage: `url(${backgroundImg})`,\r\n//   position: \"relative\",\r\n  opacity: \"1\",\r\n  backgroundAttachment: \"fixed\",\r\n  backgroundPosition: \"center\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundSize: \"cover\",\r\n  minHeight: window.innerHeight,\r\n  display: \"flex\",\r\n  height: \"100%\",\r\n  justifyContent: \"center\" /*centers items on the line (the x-axis by default)*/,\r\n  alignItems: \"center\" /*centers items on the cross-axis (y by default)*/\r\n};\r\n\r\nconst landingPageText = {\r\n  font: \"Arial\",\r\n  fontSize: \"50px\",\r\n  lineHeight: \"50pt\",\r\n  color: \"#fff\",\r\n//   position: 'relative'\r\n};\r\n\r\nexport class LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div style={landingPage} className=\"landingPage\">\r\n        <div style={landingPageText} className='landingPageText'>\r\n            <p> Hi, I'm Ved Kale </p>\r\n            <p> Software Engineer and Data Scientist </p>\r\n            <p style={{flexGrow: '1'}}></p>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\n// import { faCheckSquare, faCoffee } from '@fortawesome/free-solid-svg-icons'\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport Footer from \"./components/Footer\";\nimport LandingPage from \"./components/LandingPage\";\nlibrary.add(fab);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <LandingPage />\n        <Navigation />\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}